stack: python 3.9

branches:
  only:
    - master

image:
  - Ubuntu2004
  #- macos-bigsur
  - Visual Studio 2019

environment:
  GITHUB_API_KEY:
    secure: w1zaTUARBAuhkAKUke5sBvSkVtlDGL8YfQxROzv5oGIynVJImn+KWGFVDxyjQore

# Define the build configurations
environment:
  matrix:
    - BUILD_NAME: gcc_linux
    #- BUILD_NAME: clang_osx
    - BUILD_NAME: mingw_windows
      QTDIR: C:\Qt\6.2\mingw81_64
      MINGW: C:\Qt\Tools\mingw810_64
    - BUILD_NAME: msvc_windows
      QTDIR: C:\Qt\6.2\msvc2019_64

# Exclude invalid build configurations
matrix:
  exclude:
    - image: Ubuntu2004
      BUILD_NAME: mingw_windows
    - image: Ubuntu2004
      BUILD_NAME: msvc_windows
    - image: Ubuntu2004
      BUILD_NAME: clang_osx
  
    - image: macos-bigsur
      BUILD_NAME: mingw_windows
    - image: macos-bigsur
      BUILD_NAME: msvc_windows
    - image: macos-bigsur
      BUILD_NAME: gcc_linux
      
    - image: Visual Studio 2019
      BUILD_NAME: clang_osx
    - image: Visual Studio 2019
      BUILD_NAME: gcc_linux

configuration:
  - debug
  - release

# Do configuration-specific build steps
for:
  - matrix:
      only:
        - image: Ubuntu2004
          BUILD_NAME: gcc_linux
          
    install:
      # Configure CI bot git email/username
      - git config --global user.name "AppVeyor CI Bot"
      - git config --global user.email "appveyor@appveyor.org"
    
      - git submodule update --init --recursive
      - git submodule update --remote --merge
      
      # Push the latest versions of the submodules to the repository - note that these Linux builds run first, so other build platforms don't do this step
      - |
        if [[ `git status --porcelain` ]]; then
          git checkout master
          git add lib/geometrize
          git add resources/scripts
          git add resources/templates
          git add resources/web_export
          git commit --message "Build bot updating submodule"
          git remote rm origin
          git remote add origin https://${GITHUB_API_KEY}@github.com/Tw1ddle/geometrize.git > /dev/null 2>&1
          git push origin master
        fi
    
      - export PATH=$HOME/Qt/6.1/gcc_64/bin:$PATH

  - matrix:
      only:
        - image: macos-bigsur
          BUILD_NAME: clang_osx
          
    install:
      - git submodule update --init --recursive
      - export PATH=$HOME/Qt/6.1:$PATH
      
  - matrix:
      only:
        - image: Visual Studio 2019
          BUILD_NAME: mingw_windows

    install:
      - git submodule update --init --recursive
      - set PATH=%PATH%;%QTDIR%\bin;%MINGW%\bin
      - call "%QTDIR%\bin\qtenv2.bat"
      - set make=mingw32-make.exe

  - matrix:
      only:
        - image: Visual Studio 2019
          BUILD_NAME: msvc_windows

    install:
      - git submodule update --init --recursive
      - set PATH=%PATH%;%QTDIR%\bin
      - call "%QTDIR%\bin\qtenv2.bat"
      - call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
      - set make=nmake.exe

# Run qmake
before_build:
  - sh: cd $APPVEYOR_BUILD_FOLDER
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  - qmake geometrize.pro

# Build the project
build_script:
  - sh: cd $APPVEYOR_BUILD_FOLDER
  - cmd: cd %APPVEYOR_BUILD_FOLDER%
  - sh: make
  - cmd: '%make%'